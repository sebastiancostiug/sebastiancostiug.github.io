@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@200;400;700&family=Righteous&display=swap');
@import 'partials/variables';
@import url('https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css');

html {
    height: 100%;
    background-color: map-get($colors, dark);
    color: map-get($colors, light);
    font-family: 'Montserrat', sans-serif;
    > body {
        height: 100%;
        a {
            text-decoration: none;
            text-shadow: 0.1rem 0.1rem 0.3rem #242423;
            color: map-get($colors, light);
        }
        > div.container {
            height: 100%;
            > header {
                /* Extra small devices (phones, 600px and down) */
                @media only screen and (max-width: 600px) {
                    > :first-child {
                        margin-top: 0.5em;
                        margin-bottom: -5px;
                        margin-right: 7em;
                        font-size: 1.5em;
                        font-weight: 600;
                    }
                    > .title {
                        color: map-get($colors, light) !important;
                        font-family: 'Righteous', cursive;
                        margin-right: 0.25em;
                        font-size: 4em;
                        font-weight: 900;
                    }
                    > :last-child {
                        font-size: 0.75em;
                        letter-spacing: 0.25em;
                        margin-top: -2.8em !important;
                        margin-right: 10em;
                        > span > strike {
                            display: none;
                        }
                        > :last-child {
                            font-weight: 900;
                        }
                    }
                }

                /* Small devices (portrait tablets and large phones, 600px and up) */
                @media only screen and (min-width: 600px) and (max-width: 768px) {
                    > :first-child {
                        margin-top: 1em;
                        margin-bottom: -5px;
                        margin-right: 6.5em;
                        font-size: 2em;
                        font-weight: 600;
                    }
                    > .title {
                        color: map-get($colors, light) !important;
                        font-family: 'Righteous', cursive;
                        margin-right: 1em;
                        font-size: 4em;
                        font-weight: 900;
                    }
                    > :last-child {
                        font-size: 0.75em;
                        letter-spacing: 0.25em;
                        margin-top: -2.8em !important;
                        margin-right: 13em;
                        > span > strike {
                            display: none;
                        }
                        > :last-child {
                            font-weight: 900;
                        }
                    }
                }

                /* Medium devices (landscape tablets, 768px and up) */
                @media only screen and (min-width: 768px) {
                    > :first-child {
                        margin-top: 1em;
                        margin-bottom: -5px;
                        margin-right: 6.5em;
                        font-size: 2em;
                        font-weight: 600;
                    }
                    > .title {
                        color: map-get($colors, light) !important;
                        font-family: 'Righteous', cursive;
                        margin-right: 1em;
                        font-size: 4em;
                        font-weight: 900;
                    }
                    > :last-child {
                        font-size: 0.75em;
                        letter-spacing: 0.25em;
                        margin-top: -2.8em !important;
                        margin-right: 13em;
                        > :last-child {
                            font-weight: 900;
                        }
                    }
                }
            }
            > section.accent {
                overflow: scroll;
                height: 7%;
                background-color: map-get($colors, accent);
                box-shadow: inset 0 20px 25px -20px #000000,
                    inset 0 -20px 25px -20px #000000;
                > #pages {
                    margin: 36px 32px 0 auto;
                    ::placeholder {
                        color: map-get($colors, dark) !important;
                    }
                    ::-ms-input-placeholder {
                        color: map-get($colors, dark) !important;
                    }
                    span.icon {
                        color: map-get($colors, accent);
                    }
                    textarea {
                        resize: none !important;
                    }
                }
            }
            > #grin {
                position: fixed;
                @media only screen and (max-width: 600px) {
                    width: 150px;
                    bottom: -60px;
                    left: -50px;
                }
                @media only screen and (min-width: 600px) {
                    width: 300px;
                    bottom: -120px;
                    left: -100px;
                }
                img {
                    width: 100%;
                    height: auto;
                }
            }
            > footer.nav-menu {
                margin-top: auto;
                z-index: 2;
                overflow: hidden;
            }
        }
    }
}

/* Toggle Functionality */
#toggle {
    display: none; //hides the checkbox
}
// Styles for the 'open' state, if the checkbox is checked
#toggle:checked {
    //Any element you need to change the style if menu is open goes here, using the sibling selector (~)
    & ~ .toggle-container .button-toggle {
        //box-shadow: 0 0 0 768px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);

        &:before {
            transform: translateY(-50%) rotate(45deg) scale(1);
        }
        &:after {
            transform: translateY(-50%) rotate(-45deg) scale(1);
        }
    }
    // Open nav
    & ~ .nav {
        justify-content: space-around;
        margin-bottom: 3.5em;
        pointer-events: auto;
        transform: translate(50px, 50px);
        padding-right: 1em;
        // Restoring nav items from 'lines' in the menu icon
        .navItem {
            color: map-get($colors, light);
            letter-spacing: 0.75em;
            height: 40px;
            line-height: 40px;
            margin-top: 0;
            opacity: 1;
            transform: scaleY(1);
            transition: $transition-duration, opacity 0.1s;
            // Setting delays for the nav items in open transition
            @for $i from 1 through $items {
                &:nth-child(#{$i}) {
                    $delay: ($items - $i) * $transition-delay;
                    transition-delay: $delay;
                    &:before {
                        transition-delay: $delay;
                    }
                }
            }
            // Hide the lines
            &:before {
                opacity: 0;
            }
        }
    }
}
/* Toggle Button */
.button-toggle {
    position: absolute;
    display: inline-block;
    right: 0;
    width: 4em;
    height: 4em;
    margin: 0.75em;
    background-color: transparent;
    border: none;
    cursor: pointer;
    border-radius: 100%;
    transition: $transition-duration + 0.1;
    // Shadow on Hover
    //&:hover {
    //box-shadow: 0 0 0 8px rgba(#69140e, 0.8), inset 0 0 0 20px rgba(#69140e, 0.8);
    //}
    // Making the 'X' icon using `:before` and `:after` pseudo-elements
    // Initially hidden beause of `scale(0)` transformation
    &:before,
    &:after {
        position: absolute;
        content: '';
        top: 50%;
        right: 1.5em;
        width: 35%;
        height: 0.1em;
        background-color: map-get($colors, light);
        border-radius: 0.5em;
        transition: $transition-duration;
    }
    &:before {
        transform: translateY(-50%) rotate(45deg) scale(0);
    }
    &:after {
        transform: translateY(50%) rotate(-45deg) scale(0);
    }
}
/* Menu */
.nav {
    display: inline-block;
    margin: 2em 3em 3em;
    width: 768px;
    pointer-events: none;
    transition: $transition-duration;
}
// Showing nav items as lines, making up the hamburger menu icon
.navItem {
    position: relative;
    //display: inline-block;
    float: right;
    clear: both;
    color: transparent;
    font-size: 0.85rem;
    letter-spacing: -0.45em;
    height: 0.6em;
    line-height: 0.3em;
    //text-transform: uppercase;
    white-space: nowrap;
    transform: scaleY(0.2);
    transition: $transition-duration, opacity 1s;
    //Set delays for the nav items in close transition
    @for $i from 1 through $items {
        &:nth-child(#{$i}) {
            $delay: ($i - 1) * $transition-delay;
            transition-delay: $delay;
            &:before {
                transition-delay: $delay;
            }
        }
    }
    // Adjusting width for first line
    &:nth-child(1) {
        letter-spacing: -0.3rem;
    }
    // Adjusting width for second line
    &:nth-child(2) {
        letter-spacing: -0.32rem;
    }
    // Adjusting the fourth element onwards
    &:nth-child(3) {
        letter-spacing: -0.35rem;
    }
    &:nth-child(4) {
        letter-spacing: -0.2rem;
    }
    &:before {
        position: absolute;
        content: '';
        top: 50%;
        right: 0;
        width: 100%;
        height: 2px;
        background-color: map-get($colors, light);
        transform: translateY(-50%) scaleY(5);
        transition: $transition-duration;
    }
}

.hide {
    display: none !important;
}
